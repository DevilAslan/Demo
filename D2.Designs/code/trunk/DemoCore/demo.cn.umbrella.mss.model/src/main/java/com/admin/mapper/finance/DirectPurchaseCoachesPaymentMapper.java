package com.admin.mapper.finance;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.admin.model.finance.DirectPurchaseCoachesPayment;
import com.commons.model.Pagination;


public interface DirectPurchaseCoachesPaymentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DirectPurchaseCoachesPayment
     *
     * @mbggenerated Fri Jul 22 14:38:25 CST 2016
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DirectPurchaseCoachesPayment
     *
     * @mbggenerated Fri Jul 22 14:38:25 CST 2016
     */
    int insert(DirectPurchaseCoachesPayment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DirectPurchaseCoachesPayment
     *
     * @mbggenerated Fri Jul 22 14:38:25 CST 2016
     */
    int insertSelective(DirectPurchaseCoachesPayment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DirectPurchaseCoachesPayment
     *
     * @mbggenerated Fri Jul 22 14:38:25 CST 2016
     */
    DirectPurchaseCoachesPayment selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DirectPurchaseCoachesPayment
     *
     * @mbggenerated Fri Jul 22 14:38:25 CST 2016
     */
    int updateByPrimaryKeySelective(DirectPurchaseCoachesPayment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DirectPurchaseCoachesPayment
     *
     * @mbggenerated Fri Jul 22 14:38:25 CST 2016
     */
    int updateByPrimaryKey(DirectPurchaseCoachesPayment record);
    
    
    List<Map<String,Object>> selectListByCoachesId(Integer coachesId);
    
    
    int selectCountByCoachesId(Integer coachesId);
    
    int countAllByStatusCoachesNameAndType(@Param("status")  Integer status,@Param("coachesName") String coachesName,@Param("type")  Integer type);
    
    //分页查询教练提现申请记录
    List<Map<String,Object>> selectPaginationListByStatusCoachesNameAndType(
    		@Param("status")  Integer status,
    		@Param("coachesName") String coachesName,@Param("type")  Integer type,
    		@Param("pageStart") long pageStart,@Param("pageSize") Integer pageSize);
    
    int countAllByStatusCoachesNameRegionNameAndType(@Param("status")  Integer status,@Param("coachesName") String coachesName,
    		@Param("regionName") String regionName,@Param("type")  Integer type);
    
    
    //根据条件分页查询教练提现申请记录
    List<Map<String,Object>> selectPaginationListByStatusCoachesNameRegionNameAndType(
    		@Param("status")  Integer status,@Param("coachesName") String coachesName,
    		@Param("regionName") String regionName,@Param("type")  Integer type,
    		@Param("pageStart") long pageStart,@Param("pageSize") Integer pageSize);
    
    int updateCoachesPayStatusById(@Param("id") Integer id,@Param("status") Integer status);
    
    int selectCoachesTuitionTotalIncome(@Param("coachesId") Integer coachesId);
    
    int selectFinancePayTuition(@Param("coachesId") Integer coachesId);
    
    int countExtractByCoachesIdAndType(@Param("coachesId") Integer coachesId,@Param("type")  Integer type);
    
    //查询该教练财务未支付且科目一评价大于等于2个否的专教需扣除金额
    int selectDirectPurchaseDeductMoneyByCoachesId(@Param("coachesId") Integer coachesId);
    
    //查询该教练是否存在科目一大于等于2个否的评价记录
    int selectGradeCountByCoachesId(@Param("coachesId") Integer coachesId);
    
    Map<String, Object> findUserInfo(@Param("coachesId") Integer coachesId);
    
    //支付完修改支付时间及状态
    int updateCoachesPayStatusAndTimeById(@Param("id") Integer id,@Param("status") Integer status,@Param("payTime") Date payTime);
    
    int countExtractPayByCoachesIdAndType(@Param("coachesId") Integer coachesId,@Param("type")  Integer type);
    
    //查询教练推荐教练收入
    int selectCrcTotalIncome(@Param("coachesId") Integer coachesId);
    
    //查询财务已支付教练推荐教练费用
    int selectFinancePayCrc(@Param("coachesId") Integer coachesId);
    
}