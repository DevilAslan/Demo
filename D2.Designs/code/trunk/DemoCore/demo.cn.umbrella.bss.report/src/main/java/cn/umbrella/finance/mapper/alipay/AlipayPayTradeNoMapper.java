package cn.umbrella.finance.mapper.alipay;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import cn.umbrella.finance.dataobject.alipay.AlipayPayTradeNo;
import cn.umbrella.finance.mapper.alipay.AlipayPayTradeNoSqlProvider;

public interface AlipayPayTradeNoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alipay_pay_trade_no
     *
     * @mbggenerated Fri Apr 08 14:56:07 CST 2016
     */
    @Delete({
        "delete from alipay_pay_trade_no",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alipay_pay_trade_no
     *
     * @mbggenerated Fri Apr 08 14:56:07 CST 2016
     */
    @Insert({
        "insert into alipay_pay_trade_no (orderNum,out_trade_no, trade_no, ",
        "subject, total_fee, ",
        "gmt_create, gmt_payment, ",
        "gmt_close, seller_email, ",
        "buyer_email, trade_status, ",
        "notify_url, create_time, ",
        "update_time)",
        "values (#{orderNum,jdbcType=VARCHAR},#{outTradeNo,jdbcType=VARCHAR}, #{tradeNo,jdbcType=VARCHAR}, ",
        "#{subject,jdbcType=VARCHAR}, #{totalFee,jdbcType=VARCHAR}, ",
        "#{gmtCreate,jdbcType=VARCHAR}, #{gmtPayment,jdbcType=VARCHAR}, ",
        "#{gmtClose,jdbcType=VARCHAR}, #{sellerEmail,jdbcType=VARCHAR}, ",
        "#{buyerEmail,jdbcType=VARCHAR}, #{tradeStatus,jdbcType=VARCHAR}, ",
        "#{notifyUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(AlipayPayTradeNo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alipay_pay_trade_no
     *
     * @mbggenerated Fri Apr 08 14:56:07 CST 2016
     */
    @InsertProvider(type=AlipayPayTradeNoSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(AlipayPayTradeNo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alipay_pay_trade_no
     *
     * @mbggenerated Fri Apr 08 14:56:07 CST 2016
     */
    @Select({
        "select",
        "id, orderNum,out_trade_no, trade_no, subject, total_fee, gmt_create, gmt_payment, gmt_close, ",
        "seller_email, buyer_email, trade_status, notify_url, create_time, update_time",
        "from alipay_pay_trade_no",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="orderNum", property="orderNum", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_trade_no", property="outTradeNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="trade_no", property="tradeNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="subject", property="subject", jdbcType=JdbcType.VARCHAR),
        @Result(column="total_fee", property="totalFee", jdbcType=JdbcType.VARCHAR),
        @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.VARCHAR),
        @Result(column="gmt_payment", property="gmtPayment", jdbcType=JdbcType.VARCHAR),
        @Result(column="gmt_close", property="gmtClose", jdbcType=JdbcType.VARCHAR),
        @Result(column="seller_email", property="sellerEmail", jdbcType=JdbcType.VARCHAR),
        @Result(column="buyer_email", property="buyerEmail", jdbcType=JdbcType.VARCHAR),
        @Result(column="trade_status", property="tradeStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="notify_url", property="notifyUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    AlipayPayTradeNo selectByPrimaryKey(Integer id);
    @Select({
    	"select",
    	"id, orderNum,out_trade_no, trade_no, subject, total_fee, gmt_create, gmt_payment, gmt_close, ",
    	"seller_email, buyer_email, trade_status, notify_url, create_time, update_time",
    	"from alipay_pay_trade_no",
    	"where out_trade_no = #{out_trade_no,jdbcType=VARCHAR}"
    })
    @Results({
    	@Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
    	@Result(column="orderNum", property="orderNum", jdbcType=JdbcType.VARCHAR),
    	@Result(column="out_trade_no", property="outTradeNo", jdbcType=JdbcType.VARCHAR),
    	@Result(column="trade_no", property="tradeNo", jdbcType=JdbcType.VARCHAR),
    	@Result(column="subject", property="subject", jdbcType=JdbcType.VARCHAR),
    	@Result(column="total_fee", property="totalFee", jdbcType=JdbcType.VARCHAR),
    	@Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.VARCHAR),
    	@Result(column="gmt_payment", property="gmtPayment", jdbcType=JdbcType.VARCHAR),
    	@Result(column="gmt_close", property="gmtClose", jdbcType=JdbcType.VARCHAR),
    	@Result(column="seller_email", property="sellerEmail", jdbcType=JdbcType.VARCHAR),
    	@Result(column="buyer_email", property="buyerEmail", jdbcType=JdbcType.VARCHAR),
    	@Result(column="trade_status", property="tradeStatus", jdbcType=JdbcType.VARCHAR),
    	@Result(column="notify_url", property="notifyUrl", jdbcType=JdbcType.VARCHAR),
    	@Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
    	@Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    AlipayPayTradeNo selectByOutTradeNo(String out_trade_no);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alipay_pay_trade_no
     *
     * @mbggenerated Fri Apr 08 14:56:07 CST 2016
     */
    @UpdateProvider(type=AlipayPayTradeNoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(AlipayPayTradeNo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table alipay_pay_trade_no
     *
     * @mbggenerated Fri Apr 08 14:56:07 CST 2016
     */
    @Update({
        "update alipay_pay_trade_no",
        "set out_trade_no = #{outTradeNo,jdbcType=VARCHAR},",
          "trade_no = #{tradeNo,jdbcType=VARCHAR},",
          "subject = #{subject,jdbcType=VARCHAR},",
          "total_fee = #{totalFee,jdbcType=VARCHAR},",
          "gmt_create = #{gmtCreate,jdbcType=VARCHAR},",
          "gmt_payment = #{gmtPayment,jdbcType=VARCHAR},",
          "gmt_close = #{gmtClose,jdbcType=VARCHAR},",
          "seller_email = #{sellerEmail,jdbcType=VARCHAR},",
          "buyer_email = #{buyerEmail,jdbcType=VARCHAR},",
          "trade_status = #{tradeStatus,jdbcType=VARCHAR},",
          "notify_url = #{notifyUrl,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(AlipayPayTradeNo record);
}